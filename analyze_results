#!/usr/bin/python3
# Copyright 2021 Google LLC.
# SPDX-License-Identifier: Apache-2.00

import sys, json
import itertools

results = []

files = sys.argv[1:]
if len(files) == 0:
    results += json.load(sys.stdin)['results']
else:
    for file in files:
        with open(file) as f:
           results += json.load(f)["results"]

def get_file(r):
    return r["parameters"]["file"]
def get_mode(r):
    return r["parameters"]["mode"]

def get_result_with_mode(rs, mode):
    matches = list(filter(lambda r: get_mode(r) == mode, rs))
    if len(matches) == 0:
        print(list(rs))
        raise f'Wat?'
    return matches[0]

def summarize(file, rs):
    manifold = get_result_with_mode(rs, "manifold")["mean"]
    fastcsg = get_result_with_mode(rs, "fastcsg")["mean"]
    faster = fastcsg / manifold
    return f'# {file}:\n\tmanifold: {manifold}s ({faster}x faster)\n\tfast-csg: {fastcsg}s'

print('\n\n'.join([
    summarize(file, rs)
    for file, rs in [
      (file, list(rs)) for file, rs in itertools.groupby(sorted(results, key=get_file), get_file)
    ]
    if len(list(rs)) == 2
]) + '\n')
